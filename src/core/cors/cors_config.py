"""
Configura√ß√£o segura de CORS para MenuHub
Autor: Sistema de Seguran√ßa PDVix
Data: 2025-10-18
"""
from typing import List
from src.core.config import config
import logging

logger = logging.getLogger(__name__)

def get_allowed_origins() -> List[str]:
    """
    Retorna lista de origens permitidas baseado no ambiente

    ‚úÖ Produ√ß√£o: Apenas dom√≠nios oficiais do MenuHub
    üõ†Ô∏è Desenvolvimento: Localhost para testes
    """

    # üîí PRODU√á√ÉO - Dom√≠nios oficiais
    if config.ENVIRONMENT == "production":
        origins = [
            # ‚úÖ Dom√≠nio principal
            "https://menuhub.com.br",
            "https://www.menuhub.com.br",

            # ‚úÖ Subdom√≠nios oficiais (se tiver)
            "https://app.menuhub.com.br",
            "https://admin.menuhub.com.br",
            "https://painel.menuhub.com.br",

            # ‚úÖ Backend (para testes internos via Swagger)
            "https://api-pdvix-production.up.railway.app",
        ]
        logger.info(f"üîí CORS PRODU√á√ÉO: {len(origins)} origens autorizadas")
        return origins

    # üõ†Ô∏è DESENVOLVIMENTO - Localhost + Railway
    elif config.ENVIRONMENT == "development":
        origins = [
            # Frontend local (Flutter web/React)
            "http://localhost:3000",
            "http://localhost:8080",
            "http://localhost:5173",  # Vite
            "http://127.0.0.1:3000",
            "http://127.0.0.1:8080",

            # Backend Railway (desenvolvimento)
            "https://api-pdvix-production.up.railway.app",

            # Dom√≠nio de produ√ß√£o (para testes)
            "https://menuhub.com.br",
            "https://www.menuhub.com.br",
        ]
        logger.info(f"üõ†Ô∏è CORS DESENVOLVIMENTO: {len(origins)} origens (inclui localhost)")
        return origins

    # üß™ STAGING - Ambiente de homologa√ß√£o
    elif config.ENVIRONMENT == "staging":
        origins = [
            "https://staging.menuhub.com.br",
            "https://dev.menuhub.com.br",
            "https://api-pdvix-production.up.railway.app",
        ]
        logger.info(f"üß™ CORS STAGING: {len(origins)} origens")
        return origins

    # ‚ö†Ô∏è Fallback seguro (caso ENVIRONMENT n√£o esteja definido)
    logger.warning("‚ö†Ô∏è ENVIRONMENT n√£o definido! Usando fallback seguro.")
    return [
        "https://menuhub.com.br",
        "https://api-pdvix-production.up.railway.app"
    ]


def get_allowed_methods() -> List[str]:
    """
    M√©todos HTTP permitidos (princ√≠pio do menor privil√©gio)

    ‚úÖ Apenas os m√©todos realmente necess√°rios
    """
    return ["GET", "POST", "PUT", "DELETE", "PATCH", "OPTIONS"]


def get_allowed_headers() -> List[str]:
    """
    Headers HTTP permitidos (apenas o necess√°rio)

    ‚úÖ Lista restrita para seguran√ßa m√°xima
    """
    return [
        "Authorization",      # JWT tokens
        "Content-Type",       # application/json
        "Accept",            # Aceita resposta
        "Origin",            # CORS
        "X-Requested-With",  # Ajax requests
        "X-Store-ID",        # Identifica√ß√£o da loja (multi-tenant)
        "X-Device-ID",       # Identifica√ß√£o do dispositivo
    ]


def get_expose_headers() -> List[str]:
    """
    Headers que o frontend pode ler na resposta
    """
    return [
        "X-Total-Count",     # Pagina√ß√£o
        "X-Page-Number",     # N√∫mero da p√°gina
        "X-Rate-Limit",      # Rate limiting info
    ]