# Arquivo: src/api/jobs/trial_management.py
# (Novo Arquivo)

from datetime import datetime, timezone, timedelta
from sqlalchemy import select
from src.core import models
from src.core.database import get_db_manager


def check_and_process_expired_trials():
    """
    Job di√°rio que verifica assinaturas em trial que expiraram e as converte
    para o status 'active', iniciando o primeiro ciclo de cobran√ßa.
    """
    print("‚ñ∂Ô∏è  Executando job de verifica√ß√£o de trials expirados...")
    today = datetime.now(timezone.utc)

    with get_db_manager() as db:
        try:
            # 1. Busca todas as assinaturas em trial que venceram (ontem ou antes)
            stmt = (
                select(models.StoreSubscription)
                .where(
                    models.StoreSubscription.status == 'trialing',
                    models.StoreSubscription.current_period_end < today
                )
            )
            expired_trials = db.execute(stmt).scalars().all()

            if not expired_trials:
                print("‚úÖ Nenhum trial expirado para processar hoje.")
                return

            print(f"üîç Encontrados {len(expired_trials)} trials expirados para converter.")

            for subscription in expired_trials:
                print(f"  - Convertendo trial da loja ID {subscription.store_id} para assinatura ativa.")

                # 2. Muda o status para 'active'
                subscription.status = 'active'

                # 3. Define o novo ciclo de faturamento
                # O primeiro ciclo de cobran√ßa come√ßa hoje e termina em 30 dias.
                subscription.current_period_start = today
                subscription.current_period_end = today + timedelta(days=30)

                # TODO (Opcional): Se a loja j√° tiver um cart√£o, voc√™ pode
                # tentar fazer a primeira cobran√ßa aqui imediatamente.
                # Por agora, a cobran√ßa ser√° gerada normalmente no pr√≥ximo dia 1¬∫.

            db.commit()
            print("‚úÖ Convers√£o de trials expirados conclu√≠da com sucesso.")

        except Exception as e:
            print(f"‚ùå ERRO CR√çTICO no job de gerenciamento de trials: {e}")
            db.rollback()