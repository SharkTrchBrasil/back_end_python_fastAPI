version: '3.8'

services:
  # ═══════════════════════════════════════════════════════════
  # POSTGRESQL DATABASE
  # ═══════════════════════════════════════════════════════════
  postgres:
    image: postgres:15-alpine
    container_name: menuhub_postgres
    restart: always
    environment:
      POSTGRES_DB: menuhub_db
      POSTGRES_USER: menuhub_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-SecurePassword123!}
      TZ: America/Sao_Paulo
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - menuhub_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U menuhub_user -d menuhub_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ═══════════════════════════════════════════════════════════
  # REDIS CACHE
  # ═══════════════════════════════════════════════════════════
  redis:
    image: redis:7-alpine
    container_name: menuhub_redis
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD:-RedisPass123!}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - menuhub_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ═══════════════════════════════════════════════════════════
  # NGINX REVERSE PROXY
  # ═══════════════════════════════════════════════════════════
  nginx:
    image: nginx:alpine
    container_name: menuhub_nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - static_files:/usr/share/nginx/html/static
    depends_on:
      - backend
    networks:
      - menuhub_network

  # ═══════════════════════════════════════════════════════════
  # BACKEND API
  # ═══════════════════════════════════════════════════════════
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: menuhub_backend
    restart: always
    environment:
      # Database
      DATABASE_URL: postgresql://menuhub_user:${DB_PASSWORD:-SecurePassword123!}@postgres:5432/menuhub_db
      
      # Redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-RedisPass123!}
      
      # App Config
      ENVIRONMENT: ${ENVIRONMENT:-production}
      DEBUG: ${DEBUG:-false}
      HOST: 0.0.0.0
      PORT: 8000
      
      # JWT
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
      REFRESH_TOKEN_EXPIRE_DAYS: 7
      
      # Mercado Pago
      MERCADOPAGO_ACCESS_TOKEN: ${MERCADOPAGO_ACCESS_TOKEN}
      MERCADOPAGO_PUBLIC_KEY: ${MERCADOPAGO_PUBLIC_KEY}
      MERCADOPAGO_APP_ID: ${MERCADOPAGO_APP_ID}
      MERCADOPAGO_WEBHOOK_SECRET: ${MERCADOPAGO_WEBHOOK_SECRET}
      MERCADOPAGO_ENVIRONMENT: ${MERCADOPAGO_ENVIRONMENT:-production}
      MERCADOPAGO_NOTIFICATION_URL: ${MERCADOPAGO_NOTIFICATION_URL}
      
      # CORS
      CORS_ORIGINS: ${CORS_ORIGINS:-*}
      
      # Frontend
      FRONTEND_URL: ${FRONTEND_URL:-https://menuhub.com.br}
      
    volumes:
      - ./src:/app/src
      - ./logs:/app/logs
      - static_files:/app/static
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - menuhub_network
    command: python main.py

  # ═══════════════════════════════════════════════════════════
  # CELERY WORKER (Para tarefas assíncronas)
  # ═══════════════════════════════════════════════════════════
  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: menuhub_celery_worker
    restart: always
    environment:
      DATABASE_URL: postgresql://menuhub_user:${DB_PASSWORD:-SecurePassword123!}@postgres:5432/menuhub_db
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-RedisPass123!}
    volumes:
      - ./src:/app/src
      - ./logs:/app/logs
    depends_on:
      - postgres
      - redis
    networks:
      - menuhub_network
    command: celery -A src.core.celery_app worker --loglevel=info

  # ═══════════════════════════════════════════════════════════
  # CELERY BEAT (Para tarefas agendadas)
  # ═══════════════════════════════════════════════════════════
  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: menuhub_celery_beat
    restart: always
    environment:
      DATABASE_URL: postgresql://menuhub_user:${DB_PASSWORD:-SecurePassword123!}@postgres:5432/menuhub_db
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-RedisPass123!}
    volumes:
      - ./src:/app/src
      - ./logs:/app/logs
    depends_on:
      - postgres
      - redis
    networks:
      - menuhub_network
    command: celery -A src.core.celery_app beat --loglevel=info

  # ═══════════════════════════════════════════════════════════
  # PROMETHEUS (Monitoramento)
  # ═══════════════════════════════════════════════════════════
  prometheus:
    image: prom/prometheus:latest
    container_name: menuhub_prometheus
    restart: always
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - menuhub_network

  # ═══════════════════════════════════════════════════════════
  # GRAFANA (Dashboard de Monitoramento)
  # ═══════════════════════════════════════════════════════════
  grafana:
    image: grafana/grafana:latest
    container_name: menuhub_grafana
    restart: always
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-admin}
      GF_SERVER_ROOT_URL: ${GRAFANA_URL:-http://localhost:3000}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - menuhub_network

# ═══════════════════════════════════════════════════════════
# VOLUMES
# ═══════════════════════════════════════════════════════════
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  static_files:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

# ═══════════════════════════════════════════════════════════
# NETWORKS
# ═══════════════════════════════════════════════════════════
networks:
  menuhub_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16
